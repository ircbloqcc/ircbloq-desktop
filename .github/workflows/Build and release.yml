name: Build and release

on:
  push:
    branches: [ main ]
    tags:
      - 'V*'
    paths-ignore:
      - 'README.md'
      - 'CHANGE.md'
      - 'doc/*'
      - '.github/*'

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          
      - name: github Token
        run: git config --global url."https://${{ secrets.REPO_AUTH_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
        
      - name: Npm Install
        run: npm ci

      - name: Build Dist
        env:
          GA_ID: ${{ secrets.GA_ID }}
          NODE_ENV: production
          NODE_OPTIONS: --max_old_space_size=4096
        run: npm run dist

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          path: |
            dist/ircBloqV4-Desktop_V*.exe
            dist/IrcBloqV4-Desktop_V*.exe.blockmap
            dist/latest.yml
          retention-days: 1

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          
      - name: github Token
        run: git config --global url."https://${{ secrets.REPO_AUTH_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
        
      - name: Npm Install
        run: npm ci


      - name: Build Dist
        env:
          GA_ID: ${{ secrets.GA_ID }}
          NODE_ENV: production
          NODE_OPTIONS: --max_old_space_size=8192
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npm run dist

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          path: |
            dist/ircBloqV4-Desktop_V*.dmg
            dist/ircBloqV4-Desktop_V*.dmg.blockmap
            dist/latest-mac.yml
          retention-days: 1

  create-release:
    needs: [build-windows, build-mac]
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout public repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_AUTH_TOKEN }}
          repository: ircbloqcc/ircbloq-releases
          path: ircbloq-releases
      - name: Get tag name from ref
        shell: bash
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
        id: get_tag
      - name: Create tag in public repository
        run: |
          cd ${{github.workspace}}/ircbloq-releases
          git tag ${{ steps.get_tag.outputs.tag }}
          git push --tags --porcelain
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          owner: ircbloqcc
          repo: ircbloq-releases
          tag: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
          token:  ${{ secrets.REPO_AUTH_TOKEN }}

      - name: Download all build result
        uses: actions/download-artifact@v2

      # Windows Release
      - name: Release Windows package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.exe
          asset_name: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.exe
          asset_content_type: application/octet-stream

      - name: Release Windows blockmap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.exe.blockmap
          asset_name: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.exe.blockmap
          asset_content_type: application/octet-stream

      - name: Release Windows yml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: latest.yml
          asset_name: latest.yml
          asset_content_type: application/x-yaml

      # Mac Release
      - name: Relase Mac package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.dmg
          asset_name: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.dmg
          asset_content_type: application/octet-stream

      - name: Relase Mac blockmap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.dmg.blockmap
          asset_name: ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.dmg.blockmap
          asset_content_type: application/octet-stream

      - name: Relase Mac yml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: latest-mac.yml
          asset_name: latest-mac.yml
          asset_content_type: application/x-yaml

      # Checksum Release
      - name: Checksum
        run: sha256sum ircBloqV4-Desktop_${{ steps.get_tag.outputs.tag }}.exe >> checksums.txt

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_AUTH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: checksums.txt
          asset_name: ${{ steps.get_tag.outputs.tag }}-checksums-sha256.txt
          asset_content_type: text/plain